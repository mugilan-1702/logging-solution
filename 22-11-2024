Source_account(with log group name)
# IAM Role for CloudWatch Logs to Kinesis
resource "aws_iam_role" "cloudwatch_to_kinesis_role" {
  name = "cloudwatch-to-kinesis-role"

  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Effect = "Allow"
        Principal = {
          Service = "logs.${var.region}.amazonaws.com"
        }
        Action = "sts:AssumeRole"
      }
    ]
  })
}

# IAM Policy for the Role
resource "aws_iam_role_policy" "cloudwatch_to_kinesis_policy" {
  name = "cloudwatch-to-kinesis-policy"
  role = aws_iam_role.cloudwatch_to_kinesis_role.id

  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Effect = "Allow"
        Action = [
          "kinesis:PutRecord",
          "kinesis:PutRecordBatch"
        ]
        Resource = "arn:aws:kinesis:${var.region}:${var.centralized_account_id}:stream/centralized-log-stream"
      }
    ]
  })
}

# Get existing log groups
data "aws_cloudwatch_log_groups" "existing_groups" {}

# Create subscription filters for existing log groups
resource "aws_cloudwatch_log_subscription_filter" "existing_groups_subscription" {
  for_each = toset(data.aws_cloudwatch_log_groups.existing_groups.log_group_names)

  name            = "kinesis-subscription-${substr(sha256(each.value), 0, 8)}"
  log_group_name  = each.value
  filter_pattern  = ""
  destination_arn = var.destination_arn
  role_arn        = aws_iam_role.cloudwatch_to_kinesis_role.arn

  depends_on = [aws_iam_role_policy.cloudwatch_to_kinesis_policy]
}


